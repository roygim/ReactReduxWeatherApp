{"version":3,"sources":["components/Header.js","redux/actions/types.js","Config.js","redux/actions/index.js","components/SearchInput.js","components/CityDetailsModal.js","components/CityDetails.js","components/FavoriteBtn.js","components/DayWeather.js","components/WeeklyWeather.js","components/SearchResults.js","screens/HomeScreen.js","components/FavorCity.js","components/FavoritesCity.js","screens/FavoriteScreen.js","components/MainContent.js","App.js","redux/reducers/selectedCityReducer.js","redux/reducers/favoritesCityReducer.js","redux/reducers/index.js","redux/store/index.js","index.js"],"names":["Header","className","id","type","data-toggle","data-target","to","href","SELECTED_CITY","API_KEY","selectCity","cityName","cityId","dispatch","url","fetch","then","res","json","cityWeatherRes","Images","payload","getCityPhoto","getCityWeather","SearchInput","props","state","autocompleteData","handleClick","bind","handleKeyPress","onChange","onSelect","getItemValue","renderItem","retrieveDataAsynchronously","searchText","_this","this","xhr","XMLHttpRequest","open","responseType","onload","status","dataNew","response","forEach","e","c","label","LocalizedName","value","Key","push","setState","console","error","onerror","alert","send","target","val","item","isHighlighted","key","style","background","items","inputProps","placeholder","onKeyPress","onClick","Component","connect","customStyles","content","width","top","left","right","bottom","marginRight","transform","CityDetailsModal","cityImages","images","map","src","isOpen","modalIsOpen","onRequestClose","closeModal","contentLabel","showThumbs","infiniteLoop","React","CityDetails","openModal","data","img","alt","name","degrees","FavoriteBtn","heart","btnStyle","btnTxt","isFavorite","changeFavoriteBtn","DayWeather","day","WeeklyWeather","dayWeatherItems","SearchResults","handleFavoriteBtn","handleMyLocationWeather","geolocationSuccess","cityData","favoritesData","element","cityDetails","city","checkFavorite","getFavoritesCity","navigator","geolocation","getCurrentPosition","geolocationError","position","latitude","coords","longitude","lat_lon","dayWeather","weeklyWeather","getInitialHtml","getSelectedCityHtml","selectedCityData","selectedCity","favoritesCityData","favoritesCity","HomeScreen","FavorCity","FavoritesCity","favoritesCityItems","FavoriteScreen","MainContent","path","exact","component","App","basename","initialState","getCityData","DailyForecasts","Temperature","Maximum","Value","Day","IconPhrase","Photos","LandscapeLink","replace","index","Date","getDay","getDayStr","combineReducers","action","newFavoritesCity","middleware","thunk","createStore","rootReducer","compose","applyMiddleware","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.d9ec12b4.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../css/header.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Header() {\r\n  return (\r\n    <nav className=\"navbar navbar-inverse navbar-fixed-top\" id=\"my-navbar\">\r\n      <div className=\"container\">\r\n        <div className=\"navbar-header\">\r\n          <button type=\"button\" className=\"navbar-toggle\" data-toggle=\"collapse\" data-target=\"#navbar-collapse\">\r\n            <span className=\"icon-bar\"></span>\r\n  \t\t\t\t\t<span className=\"icon-bar\"></span>\r\n  \t\t\t\t\t<span className=\"icon-bar\"></span>\r\n  \t\t\t\t\t<span className=\"icon-bar\"></span>\r\n          </button>\r\n          \r\n          <Link to='/'>\r\n            <a href=\"javascript:void(0)\" className=\"navbar-brand\">Weather App</a>\r\n          </Link>          \r\n        </div>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbar-collapse\">\r\n          <div className=\"navbar-right\">\r\n            <Link to='/home'>\r\n              <a href=\"javascript:void(0)\" className=\"btn btn-warning navbar-btn\">Home</a>\r\n            </Link>\r\n            <Link to='/favorite'>\r\n              <a href=\"javascript:void(0)\" className=\"btn btn-warning navbar-btn\">Favorites</a>\r\n            </Link>            \r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","export const SELECTED_CITY = 'SELECTED_CITY';\r\nexport const FAVORITES_CITY = 'FAVORITES_CITY';","export const API_KEY = 'cWAvgQBRu55RFaTa48KC0hSiL9IWFChA';","import { SELECTED_CITY } from './types'\r\nimport { FAVORITES_CITY } from './types'\r\nimport { API_KEY } from '../../Config'\r\n\r\nexport const selectCity = (cityName, cityId) => dispatch => {\r\n    getCityWeather(cityName, cityId, dispatch);\r\n}\r\n\r\nfunction getCityWeather(cityName, cityId, dispatch){\r\n    let url = `https://dataservice.accuweather.com/forecasts/v1/daily/5day/${cityId}?metric=true&apikey=${API_KEY}`;\r\n    fetch(url)\r\n        .then(res => res.json())\r\n        .then(res => {\r\n                res.cityName = cityName;\r\n                res.cityId = cityId;\r\n                getCityPhoto(res, cityId, dispatch)\r\n            }            \r\n        );  \r\n}\r\n\r\nfunction getCityPhoto(cityWeatherRes, cityId, dispatch){\r\n    let url = `https://dataservice.accuweather.com/currentconditions/v1/${cityId}?getPhotos=true&apikey=${API_KEY}`;\r\n    fetch(url)\r\n        .then(res => res.json())\r\n        .then(res => {\r\n            cityWeatherRes.Images = res;\r\n            dispatch({\r\n                    type: SELECTED_CITY,\r\n                    payload: cityWeatherRes\r\n                })\r\n            }            \r\n        ); \r\n}  \r\n\r\n/*export const selectCity = (cityName, cityId) => dispatch => {\r\n    debugger\r\n    let url = `http://dataservice.accuweather.com/forecasts/v1/daily/5day/${cityId}?metric=true&apikey=${API_KEY}`;\r\n    fetch(url)\r\n        .then(res => res.json())\r\n        .then(res => {\r\n                res.cityName = cityName;\r\n                res.cityId = cityId;\r\n                dispatch({\r\n                    type: SELECTED_CITY,\r\n                    payload: res\r\n                })\r\n            }            \r\n        );    \r\n}*/\r\n\r\nexport const getFavoritesCity = (city) => {\r\n    return {\r\n        type: FAVORITES_CITY,\r\n        payload: city\r\n    }    \r\n}\r\n\r\n","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport Autocomplete from 'react-autocomplete';\r\nimport '../css/searchInput.css';\r\nimport { selectCity } from \"../redux/actions\"\r\nimport { API_KEY } from '../Config'\r\n\r\nclass SearchInput extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { \r\n      cityId: '',\r\n      cityName: '',      \r\n      autocompleteData: []\r\n    }\r\n\r\n    this.handleClick = this.handleClick.bind(this);\r\n    this.handleKeyPress = this.handleKeyPress.bind(this);\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSelect = this.onSelect.bind(this);\r\n    this.getItemValue = this.getItemValue.bind(this);\r\n    this.renderItem = this.renderItem.bind(this);\r\n    this.retrieveDataAsynchronously = this.retrieveDataAsynchronously.bind(this);\r\n  }\r\n\r\n  retrieveDataAsynchronously(searchText) {    \r\n    let _this = this;\r\n    \r\n    if(searchText == ''){\r\n        _this.setState({\r\n          autocompleteData: []\r\n      });\r\n      return\r\n    }\r\n    \r\n    let url = `https://dataservice.accuweather.com/locations/v1/cities/autocomplete?apikey=${API_KEY}&metric=false&q=${searchText}`;\r\n    let xhr = new XMLHttpRequest();\r\n    xhr.open('GET', url, true);\r\n    xhr.responseType = 'json';\r\n    xhr.onload = () => {\r\n        let status = xhr.status;\r\n        if (status == 200) {\r\n          let dataNew = [];\r\n          xhr.response.forEach(e => {\r\n            let c = { label: e.LocalizedName, value: e.Key }\r\n            dataNew.push(c);\r\n          });\r\n          _this.setState({\r\n              autocompleteData: dataNew\r\n          });\r\n        } else {\r\n            console.error(\"Cannot load data from remote source\");\r\n        }\r\n    };\r\n    xhr.onerror = () => {\r\n        alert('Accuweather API token is expired')\r\n    };\r\n    xhr.send();\r\n  }\r\n\r\n  onChange(e){\r\n    this.setState({\r\n        cityName: e.target.value\r\n    });\r\n    this.retrieveDataAsynchronously(e.target.value);\r\n  }\r\n\r\n  onSelect(val, item){\r\n    this.setState({\r\n        cityName: item.label,\r\n        cityId: item.value\r\n    });\r\n  }\r\n\r\n  renderItem(item, isHighlighted){\r\n    return (\r\n        <div key={item.value} style={{ background: isHighlighted ? 'lightgray' : 'white' }}>\r\n            {item.label}\r\n        </div>   \r\n    ); \r\n  }\r\n\r\n  getItemValue(item){\r\n    return item.label;\r\n  }\r\n\r\n  handleClick(e){\r\n    this.props.selectCity(this.state.cityName, this.state.cityId);\r\n  }\r\n\r\n  handleKeyPress(e){\r\n    if(e.key === 'Enter'){\r\n      this.props.selectCity(this.state.cityName, this.state.cityId);\r\n    }    \r\n  }\r\n\r\n  render() {\r\n      return (\r\n        <div className=\"SearchInput text-center\">\r\n          <div className=\"inner-addon right-addon\">\r\n            <Autocomplete\r\n                  getItemValue={this.getItemValue}\r\n                  items={this.state.autocompleteData}\r\n                  renderItem={this.renderItem}\r\n                  value={this.state.cityName}\r\n                  onChange={this.onChange}\r\n                  onSelect={this.onSelect}\r\n                  inputProps={{ className: \"form-control\", placeholder: \"Search\", onKeyPress: this.handleKeyPress}}\r\n              />\r\n            <i className=\"glyphicon glyphicon-search\" onClick={this.handleClick}></i>\r\n          </div>\r\n          <br/>\r\n          \r\n        </div>\r\n      );\r\n  }\r\n}\r\n\r\nexport default connect(null, { selectCity })(SearchInput);","import React from 'react';\r\nimport Modal from 'react-modal';\r\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\r\nimport { Carousel } from 'react-responsive-carousel';\r\nimport '../css/cityDetailsModal.css';\r\n\r\nconst customStyles = {\r\n  content : {\r\n    width                 : '600px',\r\n    top                   : '50%',\r\n    left                  : '50%',\r\n    right                 : 'auto',\r\n    bottom                : 'auto',\r\n    marginRight           : '-50%',\r\n    transform             : 'translate(-50%, -50%)'\r\n  }\r\n};\r\n\r\nclass CityDetailsModal extends React.Component { \r\n  render() {\r\n    const cityImages = this.props.images.map(item => <div key={item.id}><img src={item.src} /></div>)\r\n\r\n    return (    \r\n      <div className=\"CityDetailsModal\">\r\n        <Modal\r\n          isOpen={this.props.modalIsOpen}\r\n          onRequestClose={this.props.closeModal}\r\n          style={customStyles}\r\n          contentLabel=\"Images Modal\"\r\n        > \r\n          <div className=\"CityImgModal\">\r\n            <i className=\"glyphicon glyphicon-remove\" onClick={this.props.closeModal}></i>\r\n            <Carousel showThumbs={false} infiniteLoop={true}>\r\n                { cityImages }\r\n            </Carousel>\r\n          </div>\r\n        </Modal>\r\n      </div>            \r\n    );\r\n  }\r\n}\r\n\r\nexport default CityDetailsModal;\r\n","import React from 'react';\r\nimport '../css/cityDetails.css';\r\nimport CityDetailsModal from './CityDetailsModal';\r\n\r\nclass CityDetails extends React.Component { \r\n  constructor(props) {\r\n    super(props);\r\n \r\n    this.state = {\r\n      modalIsOpen: false\r\n    };\r\n \r\n    this.openModal = this.openModal.bind(this);\r\n    this.closeModal = this.closeModal.bind(this);\r\n  }\r\n  \r\n  openModal() {\r\n    this.setState({modalIsOpen: true});\r\n  }\r\n \r\n  closeModal() {\r\n    this.setState({modalIsOpen: false});\r\n  }\r\n  \r\n  render() {\r\n    return (    \r\n      <div className=\"CityDetails\">\r\n        <img src={this.props.data.img} alt=\"city\" />\r\n        <div className=\"info\">\r\n            <h1>{this.props.data.name}</h1>\r\n            <div className=\"degrees\">\r\n              {this.props.data.degrees}\r\n              <span>°c</span>\r\n            </div>\r\n            <i className=\"fa fa-search-plus\" onClick={this.openModal}></i>\r\n        </div>\r\n        <CityDetailsModal modalIsOpen={this.state.modalIsOpen} closeModal={this.closeModal} images={this.props.data.images}/>\r\n      </div>            \r\n    );\r\n  }\r\n}\r\n\r\nexport default CityDetails;\r\n","import React from 'react';\r\nimport '../css/favoriteBtn.css';\r\n\r\nfunction FavoriteBtn(props) {\r\n  let heart = 'glyphicon-heart-empty';\r\n  let btnStyle = 'btn-primary';\r\n  let btnTxt = 'Add to Favorites';\r\n\r\n  if(props.isFavorite) {\r\n    heart = 'glyphicon-heart';\r\n    btnStyle = 'btn-default';\r\n    btnTxt = 'Remove from Favorite';\r\n  }\r\n\r\n  return (    \r\n    <div className=\"FavoriteBtn pull-right\">\r\n        <i className={\"glyphicon \" + heart}></i>\r\n        <button type=\"submit\" className={\"btn \" + btnStyle} onClick={props.changeFavoriteBtn}>{btnTxt}</button>                    \r\n    </div>          \r\n  );\r\n}\r\n\r\nexport default FavoriteBtn;\r\n","import React from 'react';\r\n\r\nfunction DayWeather(props) {\r\n  return (    \r\n    <div className=\"col-md-5ths\">\r\n        <div className=\"day text-center\">\r\n            <h3>{props.item.day}</h3>\r\n            <div className=\"degrees\">\r\n                {props.item.degrees}\r\n                <span>°c</span>\r\n            </div>\r\n        </div>                    \r\n    </div>              \r\n  );\r\n}\r\n\r\nexport default DayWeather;\r\n","import React from 'react';\r\nimport '../css/WeeklyWeather.css';\r\nimport DayWeather from '../components/DayWeather';\r\n\r\nfunction WeeklyWeather(props) {\r\n    const dayWeatherItems = props.data.map(item => <DayWeather key={item.id} item={item} />)\r\n  \r\n    return (\r\n        <div className=\"WeeklyWeather col-xs-12\">\r\n            { dayWeatherItems }                      \r\n        </div>        \r\n    );\r\n}\r\n\r\nexport default WeeklyWeather;\r\n","import React from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport '../css/searchResults.css';\r\nimport CityDetails from '../components/CityDetails';\r\nimport FavoriteBtn from '../components/FavoriteBtn';\r\nimport WeeklyWeather from '../components/WeeklyWeather';\r\nimport { getFavoritesCity } from \"../redux/actions\"\r\nimport { selectCity } from \"../redux/actions\"\r\nimport { API_KEY } from '../Config'\r\n\r\nclass SearchResults extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n                       \r\n        this.handleFavoriteBtn = this.handleFavoriteBtn.bind(this);\r\n        this.handleMyLocationWeather = this.handleMyLocationWeather.bind(this);\r\n        this.geolocationSuccess = this.geolocationSuccess.bind(this);\r\n    }\r\n\r\n    checkFavorite(){\r\n        let isFavorite = false;\r\n        const { cityData } = this.props;\r\n        this.props.favoritesData.forEach(element => {\r\n            if(element.id == cityData.cityDetails.id)\r\n                isFavorite = true;\r\n        });\r\n        return isFavorite\r\n    }\r\n\r\n    handleFavoriteBtn(){\r\n        const { cityData } = this.props;\r\n        let city = cityData.cityDetails;\r\n        city.isFavorite = !this.checkFavorite();\r\n        this.props.getFavoritesCity(city);    \r\n    }\r\n\r\n    handleMyLocationWeather(){\r\n        if (!navigator.geolocation) {\r\n            alert('Geolocation is not supported by your browser');\r\n        } \r\n        else {\r\n            navigator.geolocation.getCurrentPosition(this.geolocationSuccess, this.geolocationError);\r\n        }\r\n    }\r\n\r\n    geolocationSuccess(position) {\r\n        const latitude  = position.coords.latitude;\r\n        const longitude = position.coords.longitude;\r\n        let lat_lon = `${latitude},${longitude}`;\r\n        let url = `https://dataservice.accuweather.com/locations/v1/cities/geoposition/search?apikey=${API_KEY}&q=${lat_lon}`;\r\n        let xhr = new XMLHttpRequest();\r\n        xhr.open('GET', url, true);\r\n        xhr.responseType = 'json';\r\n        xhr.onload = () => {\r\n            let status = xhr.status;\r\n            if (status == 200) {\r\n                this.props.selectCity(xhr.response.LocalizedName, xhr.response.Key);\r\n            } else {\r\n                console.error(\"Cannot load data from remote source\");\r\n            }\r\n        };\r\n        xhr.send();\r\n    }\r\n    \r\n    geolocationError() {\r\n        alert('Unable to retrieve your location');\r\n    }\r\n\r\n    getInitialHtml(){\r\n        return(\r\n            <div className=\"SearchResultsInitial\">\r\n                <h2>Select City</h2>\r\n                <a href='javascript:void(0);' onClick={this.handleMyLocationWeather}>Show me the weather for my location</a>\r\n            </div>            \r\n        )\r\n    }\r\n\r\n    getSelectedCityHtml(cityData){\r\n        let isFavorite = this.checkFavorite();\r\n        \r\n        return (\r\n            <div className=\"SearchResults\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-xs-6\">\r\n                        <CityDetails data={cityData.cityDetails} />                      \r\n                    </div>\r\n                    <div className=\"col-xs-6\">\r\n                        <FavoriteBtn isFavorite={isFavorite} changeFavoriteBtn={this.handleFavoriteBtn} />                                  \r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"jumbotron\">\r\n                        <div className=\"container text-center\">\r\n                            <h2>{ cityData.cityDetails.dayWeather }</h2>                     \r\n                        </div>                      \r\n                    </div>            \r\n                </div>\r\n                <div className=\"row\">\r\n                    <WeeklyWeather data={cityData.weeklyWeather} />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    render(){\r\n        const { cityData } = this.props;\r\n        \r\n        if(cityData == null) {\r\n            return( this.getInitialHtml() )\r\n        }\r\n        else {\r\n            return ( this.getSelectedCityHtml(cityData) )\r\n        }\r\n    }    \r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    cityData: state.selectedCityData.selectedCity,\r\n    favoritesData: state.favoritesCityData.favoritesCity\r\n  });\r\n\r\nexport default connect(mapStateToProps, { getFavoritesCity, selectCity })(SearchResults);","import React from 'react';\r\nimport SearchInput from '../components/SearchInput';\r\nimport SearchResults from '../components/SearchResults';\r\n\r\nfunction HomeScreen() {\r\n  return (\r\n    <div className=\"HomeScreen\">\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <SearchInput />\r\n                <SearchResults />\r\n            </div>\r\n        </div>  \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HomeScreen;\r\n","import React from 'react';\r\n\r\nfunction FavorCity(props) {\r\n  return (    \r\n    <div className=\"col-md-5ths\">\r\n        <div className=\"city text-center\">\r\n            <h3>{props.item.name}</h3>\r\n            <div className=\"degrees\">\r\n                {props.item.degrees}\r\n                <span>°c</span>\r\n            </div>\r\n            <h4>\r\n              { props.item.dayWeather }\r\n            </h4>\r\n        </div>                    \r\n    </div>              \r\n  );\r\n}\r\n\r\nexport default FavorCity;\r\n","import React from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport '../css/favoritesCity.css';\r\nimport FavorCity from '../components/FavorCity';\r\n\r\nclass FavoritesCity extends React.Component {\r\n  render(){\r\n    const favoritesCityItems = this.props.favoritesCityData.map(item => <FavorCity key={item.id} item={item} />)\r\n\r\n    return (    \r\n      <div className=\"FavoritesCity col-xs-12\">\r\n        { favoritesCityItems }\r\n      </div>            \r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  favoritesCityData: state.favoritesCityData.favoritesCity\r\n});\r\n\r\nexport default connect(mapStateToProps)(FavoritesCity);","import React from 'react';\r\nimport FavoritesCity from '../components/FavoritesCity';\r\n\r\nfunction FavoriteScreen() {\r\n  return (\r\n    <div className=\"FavoriteScreen\">\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <FavoritesCity />\r\n            </div>\r\n        </div>  \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FavoriteScreen;\r\n","import React from 'react';\r\nimport '../css/mainContent.css';\r\nimport HomeScreen from '../screens/HomeScreen.js';\r\nimport FavoriteScreen from '../screens/FavoriteScreen.js';\r\nimport { Route, Switch } from 'react-router-dom';\r\n\r\nfunction MainContent() {\r\n  return (\r\n    <div className=\"MainContent\">\r\n      <Switch>\r\n        <Route path='/' exact component={HomeScreen} />\r\n        <Route path='/ReactReduxWeatherApp' component={HomeScreen} />\r\n        <Route path='/home' component={HomeScreen} />\r\n        <Route path='/favorite' component={FavoriteScreen} />\r\n      </Switch>       \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MainContent;","import React from 'react';\r\nimport '../src/css/common.css';\r\nimport Header from './components/Header.js';\r\nimport MainContent from './components/MainContent';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\n\r\nfunction App() {\r\n  return (\r\n      <Router basename='/ReactReduxWeatherApp'>\r\n        <div className=\"App\">\r\n          <Header />\r\n          <MainContent />\r\n        </div>\r\n      </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { SELECTED_CITY } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  selectedCity: null\r\n}\r\n\r\nexport default function(state = initialState, action) {\r\n  switch(action.type){\r\n    case SELECTED_CITY:\r\n      return {\r\n        ...state,\r\n        selectedCity: getCityData(action.payload)\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nfunction getCityData(res){\r\n  debugger\r\n  let cityData = {};\r\n\r\n  cityData.cityDetails = {}\r\n  cityData.cityDetails.id = res.cityId;\r\n  cityData.cityDetails.name = res.cityName;\r\n  cityData.cityDetails.degrees = res.DailyForecasts[0].Temperature.Maximum.Value;\r\n  cityData.cityDetails.dayWeather = res.DailyForecasts[0].Day.IconPhrase;\r\n  cityData.cityDetails.img = res.Images[0].Photos[0].LandscapeLink.replace('L.jpg', 'S.jpg');\r\n  \r\n  cityData.cityDetails.images = []\r\n\r\n  res.Images[0].Photos.forEach((element, index) => {\r\n    let img = {}\r\n    img.id = index;\r\n    img.src = element.LandscapeLink.replace('L.jpg', 'S.jpg');\r\n    cityData.cityDetails.images.push(img);\r\n  })\r\n    \r\n  cityData.weeklyWeather = []\r\n\r\n  res.DailyForecasts.forEach((element, index) => {\r\n    let day = {}\r\n    day.id = index;\r\n    day.day = getDayStr(element.Date);\r\n    day.degrees = element.Temperature.Maximum.Value;\r\n    cityData.weeklyWeather.push(day);\r\n  });\r\n\r\n  return cityData;\r\n}\r\n\r\nfunction getDayStr(val) {\r\n  var d = new Date(val);\r\n\r\n  switch(d.getDay()){\r\n    case 0:\r\n      return 'Sun'\r\n    case 1:\r\n      return 'Mon'\r\n    case 2:\r\n      return 'Tue'\r\n    case 3:\r\n      return 'Wed'\r\n    case 4:\r\n      return 'Thu'\r\n    case 5:\r\n      return 'Fri'\r\n    case 6:\r\n      return 'Sat'\r\n    default:\r\n      return '';\r\n  }\r\n}","import { FAVORITES_CITY } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  favoritesCity: []\r\n}\r\n\r\nexport default function(state = initialState, action) {\r\n  switch(action.type){\r\n    case FAVORITES_CITY:\r\n      const { id, isFavorite} = action.payload\r\n      if(isFavorite){\r\n        return {\r\n          ...state,\r\n          favoritesCity: [...state.favoritesCity, action.payload]\r\n        };\r\n      }\r\n      else{\r\n        let newFavoritesCity = [];\r\n        state.favoritesCity.forEach(element => {\r\n          if(element.id != id)\r\n            newFavoritesCity.push(element)\r\n        });\r\n        return {\r\n          ...state,\r\n          favoritesCity: newFavoritesCity\r\n        };\r\n      }\r\n      \r\n    default:\r\n      return state;\r\n  }\r\n}","import { combineReducers } from \"redux\";\r\nimport SelectedCityReducer from \"./selectedCityReducer\"\r\nimport FavoritesCityReducer from \"./favoritesCityReducer\"\r\n\r\nexport default combineReducers({\r\n  selectedCityData: SelectedCityReducer,\r\n  favoritesCityData: FavoritesCityReducer\r\n});","import { createStore, compose, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from '../reducers';\r\n\r\nconst middleware = [thunk];\r\n\r\nexport default createStore(\r\n    rootReducer,\r\n    compose(\r\n        applyMiddleware(...middleware)/*,\r\n        window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()*/\r\n    )\r\n);","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { Provider } from 'react-redux';\r\nimport store from './redux/store'\r\n\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>\r\n    , document.getElementById('root'));"],"sourceRoot":""}