{"version":3,"sources":["components/Header.js","redux/actions/types.js","Config.js","redux/actions/index.js","components/SearchInput.js","components/CityDetails.js","components/FavoriteBtn.js","components/DayWeather.js","components/WeeklyWeather.js","components/SearchResults.js","screens/HomeScreen.js","components/FavorCity.js","components/FavoritesCity.js","screens/FavoriteScreen.js","components/MainContent.js","App.js","redux/reducers/selectedCityReducer.js","redux/reducers/favoritesCityReducer.js","redux/reducers/index.js","redux/store/index.js","index.js"],"names":["Header","className","id","type","data-toggle","data-target","to","href","SELECTED_CITY","API_KEY","SearchInput","props","state","cityId","cityName","autocompleteData","handleClick","bind","onChange","onSelect","getItemValue","renderItem","retrieveDataAsynchronously","searchText","_this","this","url","xhr","XMLHttpRequest","open","responseType","onload","status","dataNew","response","forEach","e","c","label","LocalizedName","value","Key","push","setState","console","error","send","target","val","item","isHighlighted","key","style","background","selectCity","items","inputProps","placeholder","onClick","Component","connect","dispatch","fetch","then","res","json","cityWeatherRes","Images","payload","getCityPhoto","getCityWeather","CityDetails","src","data","img","alt","name","degrees","FavoriteBtn","heart","btnStyle","btnTxt","isFavorite","changeFavoriteBtn","DayWeather","day","WeeklyWeather","dayWeatherItems","map","SearchResults","handleFavoriteBtn","cityData","favoritesData","element","cityDetails","city","checkFavorite","getFavoritesCity","dayWeather","weeklyWeather","getInitialHtml","getSelectedCityHtml","React","selectedCityData","selectedCity","favoritesCityData","favoritesCity","HomeScreen","FavorCity","FavoritesCity","favoritesCityItems","FavoriteScreen","MainContent","path","exact","component","App","basename","initialState","getCityData","DailyForecasts","Temperature","Maximum","Value","Day","IconPhrase","Photos","LandscapeLink","replace","index","Date","getDay","getDayStr","combineReducers","action","newFavoritesCity","middleware","thunk","createStore","rootReducer","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.99d2d22b.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../css/header.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Header() {\r\n  return (\r\n    <nav className=\"navbar navbar-inverse navbar-fixed-top\" id=\"my-navbar\">\r\n      <div className=\"container\">\r\n        <div className=\"navbar-header\">\r\n          <button type=\"button\" className=\"navbar-toggle\" data-toggle=\"collapse\" data-target=\"#navbar-collapse\">\r\n            <span className=\"icon-bar\"></span>\r\n  \t\t\t\t\t<span className=\"icon-bar\"></span>\r\n  \t\t\t\t\t<span className=\"icon-bar\"></span>\r\n  \t\t\t\t\t<span className=\"icon-bar\"></span>\r\n          </button>\r\n          \r\n          <Link to='/'>\r\n            <a href=\"javascript:void(0)\" className=\"navbar-brand\">Herolo Home Assignment</a>\r\n          </Link>          \r\n        </div>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbar-collapse\">\r\n          <div className=\"navbar-right\">\r\n            <Link to='/home'>\r\n              <a href=\"javascript:void(0)\" className=\"btn btn-warning navbar-btn\">Home</a>\r\n            </Link>\r\n            <Link to='/favorite'>\r\n              <a href=\"javascript:void(0)\" className=\"btn btn-warning navbar-btn\">Favorites</a>\r\n            </Link>            \r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","export const SELECTED_CITY = 'SELECTED_CITY';\r\nexport const FAVORITES_CITY = 'FAVORITES_CITY';","export const API_KEY = 'kaamhYr1ejaXNNyX3T3AJNXiWi9v4zDq';","import { SELECTED_CITY } from './types'\r\nimport { FAVORITES_CITY } from './types'\r\nimport { API_KEY } from '../../Config'\r\n\r\nexport const selectCity = (cityName, cityId) => dispatch => {\r\n    getCityWeather(cityName, cityId, dispatch);\r\n}\r\n\r\nfunction getCityWeather(cityName, cityId, dispatch){\r\n    let url = `https://dataservice.accuweather.com/forecasts/v1/daily/5day/${cityId}?metric=true&apikey=${API_KEY}`;\r\n    fetch(url)\r\n        .then(res => res.json())\r\n        .then(res => {\r\n                res.cityName = cityName;\r\n                res.cityId = cityId;\r\n                getCityPhoto(res, cityId, dispatch)\r\n            }            \r\n        );  \r\n}\r\n\r\nfunction getCityPhoto(cityWeatherRes, cityId, dispatch){\r\n    let url = `https://dataservice.accuweather.com/currentconditions/v1/${cityId}?getPhotos=true&apikey=${API_KEY}`;\r\n    fetch(url)\r\n        .then(res => res.json())\r\n        .then(res => {\r\n            cityWeatherRes.Images = res;\r\n            dispatch({\r\n                    type: SELECTED_CITY,\r\n                    payload: cityWeatherRes\r\n                })\r\n            }            \r\n        ); \r\n}  \r\n\r\n/*export const selectCity = (cityName, cityId) => dispatch => {\r\n    debugger\r\n    let url = `http://dataservice.accuweather.com/forecasts/v1/daily/5day/${cityId}?metric=true&apikey=${API_KEY}`;\r\n    fetch(url)\r\n        .then(res => res.json())\r\n        .then(res => {\r\n                res.cityName = cityName;\r\n                res.cityId = cityId;\r\n                dispatch({\r\n                    type: SELECTED_CITY,\r\n                    payload: res\r\n                })\r\n            }            \r\n        );    \r\n}*/\r\n\r\nexport const getFavoritesCity = (city) => {\r\n    return {\r\n        type: FAVORITES_CITY,\r\n        payload: city\r\n    }    \r\n}\r\n\r\n","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport Autocomplete from 'react-autocomplete';\r\nimport '../css/searchInput.css';\r\nimport { selectCity } from \"../redux/actions\"\r\nimport { API_KEY } from '../Config'\r\n\r\nclass SearchInput extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { \r\n      cityId: '',\r\n      cityName: '',      \r\n      autocompleteData: []\r\n    }\r\n\r\n    this.handleClick = this.handleClick.bind(this);\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSelect = this.onSelect.bind(this);\r\n    this.getItemValue = this.getItemValue.bind(this);\r\n    this.renderItem = this.renderItem.bind(this);\r\n    this.retrieveDataAsynchronously = this.retrieveDataAsynchronously.bind(this);\r\n  }\r\n\r\n  retrieveDataAsynchronously(searchText) {    \r\n    let _this = this;\r\n      if(searchText == ''){\r\n        _this.setState({\r\n          autocompleteData: []\r\n      });\r\n      return\r\n    }\r\n    \r\n    let url = `https://dataservice.accuweather.com/locations/v1/cities/autocomplete?apikey=${API_KEY}&metric=false&q=${searchText}`;\r\n    let xhr = new XMLHttpRequest();\r\n    xhr.open('GET', url, true);\r\n    xhr.responseType = 'json';\r\n    xhr.onload = () => {\r\n        let status = xhr.status;\r\n        if (status == 200) {\r\n          let dataNew = [];\r\n          xhr.response.forEach(e => {\r\n            let c = { label: e.LocalizedName, value: e.Key }\r\n            dataNew.push(c);\r\n          });\r\n          _this.setState({\r\n              autocompleteData: dataNew\r\n          });\r\n        } else {\r\n            console.error(\"Cannot load data from remote source\");\r\n        }\r\n    };\r\n\r\n    xhr.send();\r\n  }\r\n\r\n  onChange(e){\r\n    this.setState({\r\n        cityName: e.target.value\r\n    });\r\n    this.retrieveDataAsynchronously(e.target.value);\r\n  }\r\n\r\n  onSelect(val, item){\r\n    this.setState({\r\n        cityName: item.label,\r\n        cityId: item.value\r\n    });\r\n  }\r\n\r\n  renderItem(item, isHighlighted){\r\n    return (\r\n        <div key={item.value} style={{ background: isHighlighted ? 'lightgray' : 'white' }}>\r\n            {item.label}\r\n        </div>   \r\n    ); \r\n  }\r\n\r\n  getItemValue(item){\r\n    return item.label;\r\n  }\r\n\r\n  handleClick(e){\r\n    this.props.selectCity(this.state.cityName, this.state.cityId);\r\n  }\r\n\r\n  render() {\r\n      return (\r\n        <div className=\"SearchInput text-center\">\r\n          <div className=\"inner-addon right-addon\">\r\n            <Autocomplete\r\n                  getItemValue={this.getItemValue}\r\n                  items={this.state.autocompleteData}\r\n                  renderItem={this.renderItem}\r\n                  value={this.state.cityName}\r\n                  onChange={this.onChange}\r\n                  onSelect={this.onSelect}\r\n                  inputProps={{ className: \"form-control\", placeholder: \"Search\"}}\r\n              />\r\n            <i className=\"glyphicon glyphicon-search\" onClick={this.handleClick}></i>\r\n          </div>\r\n          <br/>\r\n          \r\n        </div>\r\n      );\r\n  }\r\n}\r\n\r\nexport default connect(null, { selectCity })(SearchInput);","import React from 'react';\r\nimport '../css/cityDetails.css';\r\n\r\nfunction CityDetails(props) {    \r\n    return (    \r\n      <div className=\"CityDetails\">\r\n        <img src={props.data.img} alt=\"city\" />\r\n        <div className=\"info\">\r\n            <h1>{props.data.name}</h1>\r\n            <div className=\"degrees\">\r\n              {props.data.degrees}\r\n              <span>°c</span>\r\n            </div>\r\n        </div>\r\n      </div>            \r\n    );\r\n}\r\n\r\nexport default CityDetails;\r\n","import React from 'react';\r\nimport '../css/favoriteBtn.css';\r\n\r\nfunction FavoriteBtn(props) {\r\n  let heart = 'glyphicon-heart-empty';\r\n  let btnStyle = 'btn-primary';\r\n  let btnTxt = 'Add to Favorites';\r\n\r\n  if(props.isFavorite) {\r\n    heart = 'glyphicon-heart';\r\n    btnStyle = 'btn-default';\r\n    btnTxt = 'Remove from Favorite';\r\n  }\r\n\r\n  return (    \r\n    <div className=\"FavoriteBtn pull-right\">\r\n        <i className={\"glyphicon \" + heart}></i>\r\n        <button type=\"submit\" className={\"btn \" + btnStyle} onClick={props.changeFavoriteBtn}>{btnTxt}</button>                    \r\n    </div>          \r\n  );\r\n}\r\n\r\nexport default FavoriteBtn;\r\n","import React from 'react';\r\n\r\nfunction DayWeather(props) {\r\n  return (    \r\n    <div className=\"col-md-5ths\">\r\n        <div className=\"day text-center\">\r\n            <h3>{props.item.day}</h3>\r\n            <div className=\"degrees\">\r\n                {props.item.degrees}\r\n                <span>°c</span>\r\n            </div>\r\n        </div>                    \r\n    </div>              \r\n  );\r\n}\r\n\r\nexport default DayWeather;\r\n","import React from 'react';\r\nimport '../css/WeeklyWeather.css';\r\nimport DayWeather from '../components/DayWeather';\r\n\r\nfunction WeeklyWeather(props) {\r\n    const dayWeatherItems = props.data.map(item => <DayWeather key={item.id} item={item} />)\r\n  \r\n    return (\r\n        <div className=\"WeeklyWeather col-xs-12\">\r\n            { dayWeatherItems }                      \r\n        </div>        \r\n    );\r\n}\r\n\r\nexport default WeeklyWeather;\r\n","import React from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport '../css/searchResults.css';\r\nimport CityDetails from '../components/CityDetails';\r\nimport FavoriteBtn from '../components/FavoriteBtn';\r\nimport WeeklyWeather from '../components/WeeklyWeather';\r\nimport { getFavoritesCity } from \"../redux/actions\"\r\n\r\nclass SearchResults extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n                \r\n        this.handleFavoriteBtn = this.handleFavoriteBtn.bind(this);\r\n    }\r\n\r\n    checkFavorite(){\r\n        let isFavorite = false;\r\n        const { cityData } = this.props;\r\n        this.props.favoritesData.forEach(element => {\r\n            if(element.id == cityData.cityDetails.id)\r\n                isFavorite = true;\r\n        });\r\n        return isFavorite\r\n    }\r\n\r\n    handleFavoriteBtn(){\r\n        const { cityData } = this.props;\r\n        let city = cityData.cityDetails;\r\n        city.isFavorite = !this.checkFavorite();\r\n        this.props.getFavoritesCity(city);    \r\n    }\r\n\r\n    getInitialHtml(){\r\n        return(\r\n            <div className=\"SearchResultsInitial\">\r\n                <h2>Select City</h2>\r\n            </div>            \r\n        )\r\n    }\r\n\r\n    getSelectedCityHtml(cityData){\r\n        let isFavorite = this.checkFavorite();\r\n        \r\n        return (\r\n            <div className=\"SearchResults\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-xs-6\">\r\n                        <CityDetails data={cityData.cityDetails} />                      \r\n                    </div>\r\n                    <div className=\"col-xs-6\">\r\n                        <FavoriteBtn isFavorite={isFavorite} changeFavoriteBtn={this.handleFavoriteBtn} />                                  \r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"jumbotron\">\r\n                        <div className=\"container text-center\">\r\n                            <h2>{ cityData.cityDetails.dayWeather }</h2>                     \r\n                        </div>                      \r\n                    </div>            \r\n                </div>\r\n                <div className=\"row\">\r\n                    <WeeklyWeather data={cityData.weeklyWeather} />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    render(){\r\n        const { cityData } = this.props;\r\n        \r\n        if(cityData == null) {\r\n            return( this.getInitialHtml() )\r\n        }\r\n        else {\r\n            return ( this.getSelectedCityHtml(cityData) )\r\n        }\r\n    }    \r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    cityData: state.selectedCityData.selectedCity,\r\n    favoritesData: state.favoritesCityData.favoritesCity\r\n  });\r\n\r\nexport default connect(mapStateToProps, { getFavoritesCity })(SearchResults);","import React from 'react';\r\nimport SearchInput from '../components/SearchInput';\r\nimport SearchResults from '../components/SearchResults';\r\n\r\nfunction HomeScreen() {\r\n  return (\r\n    <div className=\"HomeScreen\">\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <SearchInput />\r\n                <SearchResults />\r\n            </div>\r\n        </div>  \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HomeScreen;\r\n","import React from 'react';\r\n\r\nfunction FavorCity(props) {\r\n  return (    \r\n    <div className=\"col-md-5ths\">\r\n        <div className=\"city text-center\">\r\n            <h3>{props.item.name}</h3>\r\n            <div className=\"degrees\">\r\n                {props.item.degrees}\r\n                <span>°c</span>\r\n            </div>\r\n            <h4>\r\n              { props.item.dayWeather }\r\n            </h4>\r\n        </div>                    \r\n    </div>              \r\n  );\r\n}\r\n\r\nexport default FavorCity;\r\n","import React from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport '../css/favoritesCity.css';\r\nimport FavorCity from '../components/FavorCity';\r\nimport favoritesCityData from '../moka/favoritesCityData';\r\n\r\nclass FavoritesCity extends React.Component {\r\n  render(){\r\n    const favoritesCityItems = this.props.favoritesCityData.map(item => <FavorCity key={item.id} item={item} />)\r\n\r\n    return (    \r\n      <div className=\"FavoritesCity col-xs-12\">\r\n        { favoritesCityItems }\r\n      </div>            \r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  favoritesCityData: state.favoritesCityData.favoritesCity\r\n});\r\n\r\nexport default connect(mapStateToProps)(FavoritesCity);","import React from 'react';\r\nimport FavoritesCity from '../components/FavoritesCity';\r\n\r\nfunction FavoriteScreen() {\r\n  return (\r\n    <div className=\"FavoriteScreen\">\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <FavoritesCity />\r\n            </div>\r\n        </div>  \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FavoriteScreen;\r\n","import React from 'react';\r\nimport '../css/mainContent.css';\r\nimport HomeScreen from '../screens/HomeScreen.js';\r\nimport FavoriteScreen from '../screens/FavoriteScreen.js';\r\nimport { Route, Switch } from 'react-router-dom';\r\n\r\nfunction MainContent() {\r\n  return (\r\n    <div className=\"MainContent\">\r\n      <Switch>\r\n        <Route path='/' exact component={HomeScreen} />\r\n        <Route path='/Roei-Grumet-07-01-2020' component={HomeScreen} />\r\n        <Route path='/home' component={HomeScreen} />\r\n        <Route path='/favorite' component={FavoriteScreen} />\r\n      </Switch>       \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MainContent;","import React from 'react';\nimport '../src/css/common.css';\nimport Header from './components/Header.js';\nimport MainContent from './components/MainContent';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nfunction App() {\n  return (\n      <Router basename='/Roei-Grumet-07-01-2020'>\n        <div className=\"App\">\n          <Header />\n          <MainContent />\n        </div>\n      </Router>\n  );\n}\n\nexport default App;\n","import { SELECTED_CITY } from \"../actions/types\";\r\nimport selectedCityData from '../../moka/selectedCityData';\r\n\r\nconst initialState = {\r\n  selectedCity: null\r\n}\r\n\r\nexport default function(state = initialState, action) {\r\n  switch(action.type){\r\n    case SELECTED_CITY:\r\n      return {\r\n        ...state,\r\n        selectedCity: getCityData(action.payload)\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nfunction getCityData(res){\r\n  let cityData = {};\r\n\r\n  cityData.cityDetails = {}\r\n  cityData.cityDetails.id = res.cityId;\r\n  cityData.cityDetails.name = res.cityName;\r\n  cityData.cityDetails.degrees = res.DailyForecasts[0].Temperature.Maximum.Value;\r\n  cityData.cityDetails.dayWeather = res.DailyForecasts[0].Day.IconPhrase;\r\n  cityData.cityDetails.img = res.Images[0].Photos[0].LandscapeLink.replace('L.jpg', 'S.jpg');\r\n  \r\n  cityData.weeklyWeather = []\r\n\r\n  res.DailyForecasts.forEach((element, index) => {\r\n    let day = {}\r\n    day.id = index;\r\n    day.day = getDayStr(element.Date);\r\n    day.degrees = element.Temperature.Maximum.Value;\r\n    cityData.weeklyWeather.push(day);\r\n  });\r\n\r\n  return cityData;\r\n}\r\n\r\nfunction getDayStr(val) {\r\n  var d = new Date(val);\r\n\r\n  switch(d.getDay()){\r\n    case 0:\r\n      return 'Sun'\r\n    case 1:\r\n      return 'Mon'\r\n    case 2:\r\n      return 'Tue'\r\n    case 3:\r\n      return 'Wed'\r\n    case 4:\r\n      return 'Thu'\r\n    case 5:\r\n      return 'Fri'\r\n    case 6:\r\n      return 'Sat'\r\n    default:\r\n      return '';\r\n  }\r\n}","import { FAVORITES_CITY } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  favoritesCity: []\r\n}\r\n\r\nexport default function(state = initialState, action) {\r\n  switch(action.type){\r\n    case FAVORITES_CITY:\r\n      const { id, isFavorite} = action.payload\r\n      if(isFavorite){\r\n        return {\r\n          ...state,\r\n          favoritesCity: [...state.favoritesCity, action.payload]\r\n        };\r\n      }\r\n      else{\r\n        let newFavoritesCity = [];\r\n        state.favoritesCity.forEach(element => {\r\n          if(element.id != id)\r\n            newFavoritesCity.push(element)\r\n        });\r\n        return {\r\n          ...state,\r\n          favoritesCity: newFavoritesCity\r\n        };\r\n      }\r\n      \r\n    default:\r\n      return state;\r\n  }\r\n}","import { combineReducers } from \"redux\";\r\nimport SelectedCityReducer from \"./selectedCityReducer\"\r\nimport FavoritesCityReducer from \"./favoritesCityReducer\"\r\n\r\nexport default combineReducers({\r\n  selectedCityData: SelectedCityReducer,\r\n  favoritesCityData: FavoritesCityReducer\r\n});","import { createStore, compose, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from '../reducers';\r\n\r\nconst middleware = [thunk];\r\n\r\nexport default createStore(\r\n    rootReducer,\r\n    compose(\r\n        applyMiddleware(...middleware),\r\n        window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n    )\r\n);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './redux/store'\n\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>\n    , document.getElementById('root'));"],"sourceRoot":""}